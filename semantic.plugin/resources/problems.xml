<?xml version='1.0' encoding='UTF-8'?>
<problems>
	<problem id="P41N1" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Identifiers in specification namespace must be unique.</text>
		<description>4.1 (N1) An AADL specification has one global namespace. The package and property set identifiers reside in this space and must be unique.</description>
	</problem>
	
	<problem id="P42N1" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>A defining package name must be unique in the global namespace.</text>
		<description>4.2 (N1) A defining package name consists of a sequence of one or more package identifiers separated by a double colon (“::”). A defining package name must be unique in the global namespace.</description>
	</problem>
	
	<problem id="P42N7" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The package name in a import_declaration must exist in the global name space.</text>
		<description>4.2 (N7) The package name in a import_declaration must exist in the global name space.</description>
	</problem>
	
	<problem id="P42N11global" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The package name referenced in an alias_declaration must exist in the global namespace.</text>
		<description>4.2 (N11) The package name referenced in an alias_declaration must exist in the global namespace and must be listed in the import_declaration.</description>
	</problem>
	
	<problem id="P42N11import" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The package name referenced in an alias_declaration must be listed in the import_declaration.</text>
		<description>4.2 (N11) The package name referenced in an alias_declaration must exist in the global namespace and must be listed in the import_declaration.</description>
	</problem>
	
	<problem id="P42N12" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Classifier referenced is not found in public package section.</text>
		<description>4.2 (N12) The classifier referenced by the alias_declaration must exist in the name space of the public section of the package being referenced by the alias_declaration.</description>
	</problem>
	
	<problem id="P42N12other" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Wrong reference structure, no package is referenced</text>
		<description>4.2 (N12) The classifier referenced by the alias_declaration must exist in the name space of the public section of the package being referenced by the alias_declaration.</description>
	</problem>
	
	<problem id="P42N14package" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Conflict of alias name of the package with imported package.</text>
		<description>4.2 (N14) The defining identifier of an alias_declaration must be unique in the namespace of the package containing the alias_declaration. If an alias_declaration defines an alias for a package then the alias name must not conflict with any package name listed in an import_declaration or that of the package containing the alias_declaration.</description>
	</problem>
	
	<problem id="P42N14defining" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Conflict of alias name of the package with package name where it is defined.</text>
		<description>4.2 (N14) The defining identifier of an alias_declaration must be unique in the namespace of the package containing the alias_declaration. If an alias_declaration defines an alias for a package then the alias name must not conflict with any package name listed in an import_declaration or that of the package containing the alias_declaration.</description>
	</problem>
	
	<problem id="P42N14other" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The defining identifier of an alias_declaration is not unique in package namespace.</text>
		<description>4.2 (N14) The defining identifier of an alias_declaration must be unique in the namespace of the package containing the alias_declaration. If an alias_declaration defines an alias for a package then the alias name must not conflict with any package name listed in an import_declaration or that of the package containing the alias_declaration.</description>
	</problem>
	
	<problem id="P42N15" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The defining identifier of an alias_declaration is not unique in package namespace. (identifier not specified)</text>
		<description>4.2 (N15) The alias_declaration makes the publicly visible identifier of classifiers declared in another package accessible in the name space of the package containing the alias_declaration. If the alias declaration for a classifier does not include a defining identifier then the referenced classifier identifier is used as defining identifier and this identifier must be unique in the namespace of the package with the alias declaration.</description>
	</problem>
	
	<problem id="P42N16" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The defining identifier of an alias_declaration is not unique in package namespace. ("all" alias declaration)</text>
		<description>4.2 (N16) If the alias_declaration renames all publicly visible identifiers of component types and feature group types by naming the package and all, then all those identifiers must also be unique in the namespace of the package with the alias declaration.</description>
	</problem>
	
	<problem id="P42L4" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The component category does not match the category of referenced component type.</text>
		<description>4.2 (L4) The component category in an alias declaration must match the category of the referenced component type.</description>
	</problem>
	
	<problem id="P43N1" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The defining identifier for a component type id not unique in the namespace of the package.</text>
		<description>4.3 (N1) The defining identifier for a component type must be unique in the namespace of the package within which it is declared.</description>
	</problem>
	
	<problem id="P43N2" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Identifier is not unique in component type local namespace.</text>
		<description>4.3 (N2) Each component type has a local namespace for defining identifiers of prototypes, features, modes, mode transitions, and flow specifications. That is, defining prototype, defining feature, defining modes and mode transitions, and defining flow specification identifiers must be unique in the component type namespace.</description>
	</problem>
	
	<problem id="P43N3" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Ancestor in a component type extension must exist.</text>
		<description>4.3 (N3) The component type identifier of the ancestor in a component type extension, i.e., that appears after the reserved word extends, must be defined in the specified package namespace. If no package name is specified, then the identifier must be defined in the namespace of the package the extension is declared in.</description>
	</problem>
	
	<problem id="P43L3" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>The category of the component type being extended must match the category of the extending component type.</text>
		<description>4.3 (L3) The category of the component type being extended must match the category of the extending component type, i.e., they must be identical or the category being extended must be abstract.</description>
	</problem>
	
	<problem id="P43L6" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>Component type and it's ancestor should have both modes or requires modes subclauses.</text>
		<description>4.3 (L6) If the extended component type and an ancestor component type in the extends hierachy contain modes subclauses, they must both be requires_modes_subclause or modes_subclause.</description>
	</problem>
	
	<problem id="P51L1" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>A data type declaration contains not allowed features.</text>
		<description>5.1 (L1) A data type declaration can contain provides subprogram access declarations as well as property associations.</description>
	</problem>
	
	<problem id="P51L2modes" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>A data type declaration must not contain modes subclause.</text>
		<description>5.1 (L2) A data type declaration must not contain a flow specification or modes subclause.</description>
	</problem>
	
	<problem id="P51L2flows" category="ru.ispras.masiw.plugin.aadl.problem">
		<text>A data type declaration must not contain flow specification.</text>
		<description>5.1 (L2) A data type declaration must not contain a flow specification or modes subclause.</description>
	</problem>
	
</problems>
